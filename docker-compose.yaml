# This docker compose file contains all of the necessary services needed to do
# end-to-end testing with the IAM system.
#
# Services deployed:
# - OpenFGA
# - Zitadel
# - Mailhog
services:
  openfga-apiserver:
    user: "1001:1001"
    depends_on:
      migrate-openfga:
        condition: service_completed_successfully
    image: openfga/openfga:v1.9.0
    environment:
      - OPENFGA_DATASTORE_ENGINE=memory
      - OPENFGA_LOG_FORMAT=json
      - OPENFGA_PLAYGROUND_ENABLED=true
      - OPENFGA_GRPC_TLS_ENABLED=false
    command:
      - run
      - --check-query-cache-enabled
      - --metrics-enabled
      - --datastore-metrics-enabled
      - --authn-method=none
    healthcheck:
      test: ["CMD", "/usr/local/bin/grpc_health_probe", "-addr=openfga-apiserver:8081"]
      interval: 5s
      timeout: 30s
      retries: 3
    ports:
      # Needed for the http server
      - "8080:8080"
      # Needed for the grpc server (if used)
      - "8081:8081"
      # Needed for the playground (Do not enable in prod!)
      - "3000:3000"
      # Needed for the prometheus metrics
      - "2112:2112" #prometheus metrics

  zitadel:
    image: 'ghcr.io/zitadel/zitadel:v2.71.7'
    command: >
      start-from-init
      --config /zitadel/config/defaults.yaml
      --steps /zitadel/config/init-steps.yaml
      --masterkeyFile /zitadel/secrets/masterkey.txt
      --tlsMode disabled
    volumes:
      - ./test/config/zitadel/config:/zitadel/config:ro
      - ./test/config/zitadel/secrets:/zitadel/secrets:z
    depends_on:
      database:
        condition: service_healthy
      create-databases:
        condition: service_completed_successfully
    ports:
      - '8082:8080'
    healthcheck:
      test: [ "CMD", "/app/zitadel", "ready", "--config", "/zitadel.yaml" ]
      interval: '10s'
      timeout: '5s'
      retries: 5
      start_period: '10s'

  mailhog: # Mailhog is a fake local SMTP server for testing
    image: mailhog/mailhog:latest
    ports:
      - '1025:1025'
      - '8025:8025' # Web UI
