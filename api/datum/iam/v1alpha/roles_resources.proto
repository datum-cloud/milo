syntax = "proto3";

package datum.iam.v1alpha;

import "google/api/field_behavior.proto";
import "google/api/field_info.proto";
import "google/api/resource.proto";
import "google/protobuf/timestamp.proto";

option go_package = "go.datumapis.com/os/genproto/iam/v1alpha;iampb";

// A role in the Identity and Access Management service. Roles contain a
// grouping of permissions that should be included when the Role is bound to an
// IAM subject through an IAM policy.
message Role {
  option (google.api.resource) = {
    type: "iam.datumapis.com/Role"
    // Service providers will create roles that are provided directly by the
    // service. Service consumers will be able to query for these roles so they
    // can see what roles are available.
    pattern: "services/{service}/roles/{role}"
    // Organizations may want to create custom roles that can be used at the
    // organizational level to assign permissions.
    //
    // TODO: Uncomment once we're ready for custom user defined roles
    // pattern: "organizations/{organization}/roles/{role}"
    //
    // Roles can be created at the project level so project admins can assign
    // permissions within a project.
    //
    // TODO: Uncomment once we're ready for custom user defined roles
    // pattern: "projects/{project}/roles/{role}"
    style: DECLARATIVE_FRIENDLY
    singular: "role"
    plural: "roles"
  };

  // The resource name assigned to this role.
  string name = 1 [
    (google.api.field_behavior) = IDENTIFIER,
    (google.api.field_behavior) = OUTPUT_ONLY
  ];

  // The resource ID of this Role within its parent resource.
  string role_id = 2 [(google.api.field_behavior) = OUTPUT_ONLY];

  // The resource name of the parent the role was created under.
  string parent = 3 [(google.api.field_behavior) = OUTPUT_ONLY];

  // Server assigned unique identifier for the Role. The value is a UUID4 string
  // and guaranteed to remain unchanged until the resource is deleted.
  string uid = 4 [
    (google.api.field_behavior) = OUTPUT_ONLY,
    (google.api.field_info).format = UUID4
  ];

  // Human-readable display name of this Role that you can modify. The maximum
  // length is 63 characters.
  string display_name = 5 [(google.api.field_behavior) = OPTIONAL];

  // Annotations is an unstructured key-value map stored with a Role that may be
  // set by external tools to store and retrieve arbitrary metadata. They are
  // not queryable and should be preserved when modifying objects.
  map<string, string> annotations = 6 [(google.api.field_behavior) = OPTIONAL];

  // Labels is an unstructured key-value map stored with a Role that may be set
  // by external tools to enable platform features which identify roles via
  // label selections.
  map<string, string> labels = 7 [(google.api.field_behavior) = OPTIONAL];

  // Output only. The time when the Role is created.
  google.protobuf.Timestamp create_time = 8 [(google.api.field_behavior) = OUTPUT_ONLY];

  // Output only. The last time that the Role is updated.
  google.protobuf.Timestamp update_time = 9 [(google.api.field_behavior) = OUTPUT_ONLY];

  // Output only. For a deleted resource, the deletion time. It is only
  // populated as a response to a Delete request.
  google.protobuf.Timestamp delete_time = 10 [(google.api.field_behavior) = OUTPUT_ONLY];

  // Output only. If set, there are currently changes in flight to the Role.
  bool reconciling = 11 [(google.api.field_behavior) = OUTPUT_ONLY];

  // This checksum is computed by the server based on the value of other fields,
  // and might be sent on update requests to ensure the client has an up-to-date
  // value before proceeding.
  string etag = 12 [(google.api.field_behavior) = OUTPUT_ONLY];

  // Configuration options for the Role.
  RoleSpec spec = 13 [(google.api.field_behavior) = REQUIRED];

  // Provides status information to determine the current state of the role.
  RoleStatus status = 14 [(google.api.field_behavior) = OUTPUT_ONLY];
}

// Defines the options that can be configured on a Role.
message RoleSpec {
  // The names of the permissions this role grants when bound in an IAM policy.
  // All permissions must be in the format: `{service}.{resource}.{action}`
  // (e.g. compute.workloads.create).
  repeated string included_permissions = 1 [(google.api.field_behavior) = REQUIRED];

  // Defines the launch stage of the IAM Role. Must be one of: Early Access,
  // Alpha, Beta, Stable, Deprecated.
  string launch_stage = 2 [(google.api.field_behavior) = REQUIRED];

  // The list of roles from which this role inherits permissions.
  // Each entry must be a valid role resource name, e.g. "services/resourcemanager.datumapis.com/roles/projectAdmin".
  repeated string inherited_roles = 3 [(google.api.field_behavior) = OPTIONAL];
}

// Provides status information on the Role.
message RoleStatus {}
