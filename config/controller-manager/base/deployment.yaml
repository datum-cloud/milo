apiVersion: apps/v1
kind: Deployment
metadata:
  name: milo-controller-manager
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: milo-controller-manager
      app.kubernetes.io/part-of: milo-control-plane
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: milo-controller-manager
        app.kubernetes.io/part-of: milo-control-plane
    spec:
      automountServiceAccountToken: false
      containers:
      - name: milo-controller-manager
        image: ghcr.io/datum-cloud/milo:latest
        imagePullPolicy: IfNotPresent
        args:
          - controller-manager
          - --leader-elect=true
          - --leader-elect-lease-duration=15s
          - --leader-elect-renew-deadline=10s
          - --leader-elect-retry-period=2s
          - --leader-elect-resource-namespace=$(LEADER_ELECT_RESOURCE_NAMESPACE)
          - --authentication-skip-lookup
          - --secure-port=6443
          - --kubeconfig=$(KUBECONFIG)
          - --infra-cluster-kubeconfig=$(INFRA_CLUSTER_KUBECONFIG)
          - --cert-dir=$(CERT_DIR)
          - --tls-cert-file=$(TLS_CERT_FILE)
          - --tls-private-key-file=$(TLS_PRIVATE_KEY_FILE)
          - --logging-format=$(LOGGING_FORMAT)
          - --v=$(LOG_LEVEL)
          - --control-plane-scope=$(CONTROL_PLANE_SCOPE)
        env:
          - name: LEADER_ELECT_RESOURCE_NAMESPACE
            value: milo-system
          # Default to INFO level logging
          - name: LOG_LEVEL
            value: "4"
          - name: LOGGING_FORMAT
            value: "json"
          - name: KUBECONFIG
            value: /etc/kubernetes/config/kubeconfig
          # Default to using the in-cluster config to connect to the
          # infrastructure cluster.
          - name: INFRA_CLUSTER_KUBECONFIG
            value: "-"
          - name: CERT_DIR
            value: /etc/kubernetes/pki/webhook
          - name: TLS_CERT_FILE
            value: /etc/kubernetes/pki/webhook/tls.crt
          - name: TLS_PRIVATE_KEY_FILE
            value: /etc/kubernetes/pki/webhook/tls.key
          - name: CONTROL_PLANE_SCOPE
            value: "core"
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: "1"
            memory: 512Mi
        securityContext:
          runAsNonRoot: true
          runAsUser: 65534
          runAsGroup: 65534
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          capabilities:
            drop:
              - ALL
        ports:
        - containerPort: 6443
          name: https
          protocol: TCP
        # The controller manager webhook is exposed on a separate port than the
        # webhook server provided by the k8s native controller webhooks so we
        # can leverage the controller runtime library to manage and implement
        # webhooks.
        - containerPort: 9443
          name: ctrl-mgr
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /healthz
            port: https
            scheme: HTTPS
          initialDelaySeconds: 10
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /healthz
            port: https
            scheme: HTTPS
          initialDelaySeconds: 10
          periodSeconds: 10
        startupProbe:
          httpGet:
            path: /healthz
            port: https
            scheme: HTTPS
          initialDelaySeconds: 10
          periodSeconds: 10
      restartPolicy: Always
