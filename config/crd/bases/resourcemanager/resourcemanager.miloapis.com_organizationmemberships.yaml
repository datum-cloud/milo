---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: organizationmemberships.resourcemanager.miloapis.com
spec:
  group: resourcemanager.miloapis.com
  names:
    kind: OrganizationMembership
    listKind: OrganizationMembershipList
    plural: organizationmemberships
    singular: organizationmembership
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.organizationRef.name
      name: Organization
      type: string
    - jsonPath: .status.organization.type
      name: Organization Type
      type: string
    - jsonPath: .status.organization.displayName
      name: Organization Display Name
      type: string
    - jsonPath: .spec.userRef.name
      name: User
      type: string
    - jsonPath: .status.user.email
      name: User Email
      priority: 1
      type: string
    - jsonPath: .status.user.givenName
      name: User Given Name
      priority: 1
      type: string
    - jsonPath: .status.user.familyName
      name: User Family Name
      priority: 1
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: "OrganizationMembership links a user to an organization, establishing
          the\nfoundation for role-based access control within organizations. Note
          that\nmembership alone does not grant access - a PolicyBinding must also
          be\ncreated to assign roles and permissions to the user.\n\nOrganizationMemberships
          are namespaced resources that create relationships\nbetween cluster-scoped
          users and organizations. They are a prerequisite\nfor access control but
          do not grant permissions by themselves.\n\nKey characteristics:\n- Namespaced:
          Created within the organization's namespace\n- User-organization linkage:
          Connects users to organizations\n- Access prerequisite: Required before
          PolicyBindings can grant organization permissions\n- Status information:
          Provides cached details about both user and organization\n\nCommon workflows:\n1.
          Ensure both the user and organization exist and are ready\n2. Create the
          membership in the organization's namespace\n3. Wait for the Ready condition
          to become True\n4. Create PolicyBinding resources to grant specific roles
          and permissions\n5. User can now access organization resources based on
          assigned policies\n\nPrerequisites:\n- User: The referenced user must exist
          and be ready\n- Organization: The referenced organization must exist and
          be ready\n- Namespace: Must be created in the organization's associated
          namespace\n\nExample - Adding a user to an organization:\n\n\tapiVersion:
          resourcemanager.miloapis.com/v1alpha1\n\tkind: OrganizationMembership\n\tmetadata:\n\t
          \ name: jane-doe-acme-membership\n\t  namespace: organization-acme-corp\n\tspec:\n\t
          \ organizationRef:\n\t    name: acme-corp\n\t  userRef:\n\t    name: jane-doe\n\nRelated
          resources:\n- User: Must exist before creating membership\n- Organization:
          Must exist before creating membership\n- PolicyBinding: Required to grant
          actual permissions after membership is established\n\nTroubleshooting:\n-
          Check the Ready condition in status to verify successful membership\n- Ensure
          both user and organization resources exist and are ready\n- Verify the membership
          is created in the correct organization namespace\n- Remember that PolicyBinding
          resources are still needed to grant actual permissions\n- List memberships
          within the organization namespace to verify creation\n\nOrganizationMembership
          is the Schema for the organizationmemberships API"
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: |-
              OrganizationMembershipSpec defines the desired membership relationship
              between a user and an organization.
            properties:
              organizationRef:
                description: |-
                  OrganizationRef identifies the organization to grant membership in.
                  The organization must exist before creating the membership.

                  Example:
                    organizationRef:
                      name: acme-corp
                properties:
                  name:
                    description: |-
                      Name is the name of the organization to reference.
                      Must match an existing organization resource.

                      Example: "acme-corp"
                    type: string
                required:
                - name
                type: object
              userRef:
                description: |-
                  UserRef identifies the user to grant organization membership.
                  The user must exist before creating the membership.

                  Example:
                    userRef:
                      name: jane-doe
                properties:
                  name:
                    description: |-
                      Name is the name of the user to reference.
                      Must match an existing user resource.

                      Example: "jane-doe"
                    type: string
                required:
                - name
                type: object
            required:
            - organizationRef
            - userRef
            type: object
          status:
            description: |-
              OrganizationMembershipStatus defines the observed state of OrganizationMembership,
              indicating whether the membership has been successfully established.
            properties:
              conditions:
                default:
                - lastTransitionTime: "1970-01-01T00:00:00Z"
                  message: Waiting for control plane to reconcile
                  reason: Unknown
                  status: Unknown
                  type: Ready
                description: |-
                  Conditions describe the current state of membership establishment.
                  Check the "Ready" condition to determine if the membership is
                  active and the user has access to organization resources.

                  Common condition types:
                  - Ready: Membership is established and user has organization access

                  Example ready condition:
                    - type: Ready
                      status: "True"
                      reason: MembershipReady
                      message: User successfully added to organization
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: |-
                  ObservedGeneration tracks the most recent membership spec that the
                  controller has processed. Use this to determine if status reflects
                  the latest changes.
                format: int64
                type: integer
              organization:
                description: |-
                  Organization contains cached information about the organization in this membership.
                  This information is populated by the controller from the referenced organization.
                properties:
                  displayName:
                    description: |-
                      DisplayName is the human-readable name of the organization.
                      Populated from the kubernetes.io/display-name annotation of the organization.
                    type: string
                  type:
                    description: |-
                      Type is the business model of the organization (Personal or Standard).
                      Populated from the referenced organization resource.
                    type: string
                type: object
              user:
                description: |-
                  User contains cached information about the user in this membership.
                  This information is populated by the controller from the referenced user.
                properties:
                  email:
                    description: |-
                      Email is the email address of the user.
                      Populated from the referenced user resource.
                    type: string
                  familyName:
                    description: |-
                      FamilyName is the last name of the user.
                      Populated from the referenced user resource.
                    type: string
                  givenName:
                    description: |-
                      GivenName is the first name of the user.
                      Populated from the referenced user resource.
                    type: string
                type: object
            type: object
        type: object
    selectableFields:
    - jsonPath: .spec.userRef.name
    - jsonPath: .spec.organizationRef.name
    served: true
    storage: true
    subresources:
      status: {}
