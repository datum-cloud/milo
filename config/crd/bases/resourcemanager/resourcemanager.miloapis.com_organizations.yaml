---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: organizations.resourcemanager.miloapis.com
spec:
  group: resourcemanager.miloapis.com
  names:
    categories:
    - datum
    kind: Organization
    listKind: OrganizationList
    plural: organizations
    singular: organization
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.annotations.kubernetes\.io\/display-name
      name: Display Name
      type: string
    - jsonPath: .spec.type
      name: Type
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: "Organization represents the top-level tenant boundary in Milo's
          control plane\nfor consumers of services. Organizations provide complete
          isolation and serve\nas the root of the resource hierarchy for access control
          and resource management.\n\nOrganizations are cluster-scoped resources that
          automatically create an\nassociated namespace named \"organization-{name}\"
          for organizing related\nresources. All projects must be owned by an organization.\n\nChoose
          the organization type based on your use case:\n- Personal: Individual developers
          and small projects\n- Standard: Teams, businesses, and production workloads\n\nKey
          characteristics:\n- Cluster-scoped: Organizations exist globally across
          the Milo deployment\n- Immutable type: Organization type cannot be changed
          after creation\n- Automatic namespacing: Creates \"organization-{name}\"
          namespace\n- Resource hierarchy root: Contains projects and user memberships\n-
          Tenant isolation: Complete isolation between different organizations\n\nCommon
          workflows:\n1. Create organization for your team or business\n2. Add organization
          members using OrganizationMembership resources\n3. Create projects within
          the organization\n4. Deploy resources within organization projects\n\nPrerequisites:\n-
          None (organizations are the root of the resource hierarchy)\n\nExample -
          Personal organization:\n\n\tapiVersion: resourcemanager.miloapis.com/v1alpha1\n\tkind:
          Organization\n\tmetadata:\n\t  name: jane-doe-personal\n\t  annotations:\n\t
          \   kubernetes.io/display-name: \"Jane's Personal Projects\"\n\tspec:\n\t
          \ type: Personal\n\nExample - Standard business organization:\n\n\tapiVersion:
          resourcemanager.miloapis.com/v1alpha1\n\tkind: Organization\n\tmetadata:\n\t
          \ name: acme-corp\n\t  annotations:\n\t    kubernetes.io/display-name: \"ACME
          Corporation\"\n\tspec:\n\t  type: Standard\n\nRelated resources:\n- Project:
          Projects must be owned by an organization\n- OrganizationMembership: Links
          users to organizations\n- IAM resources: Inherit permissions from organization
          level\n\nTroubleshooting:\n- Check the Ready condition in status to verify
          successful creation\n- List all organizations to verify creation and status\n-
          Display names are set via the kubernetes.io/display-name annotation\n\nOrganization
          is the Schema for the Organizations API"
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: |-
              OrganizationSpec defines the desired state of Organization, specifying the
              business characteristics that determine how the organization operates.
            properties:
              type:
                description: |-
                  Type specifies the business model for this organization.
                  This field determines resource limits, billing, and available features.

                  Choose "Personal" for individual users and small projects.
                  Choose "Standard" for teams and business use cases.

                  Warning: The type cannot be changed after organization creation.

                  Example: "Standard"
                enum:
                - Personal
                - Standard
                type: string
                x-kubernetes-validations:
                - message: organization type is immutable
                  rule: type(oldSelf) == null_type || self == oldSelf
            required:
            - type
            type: object
          status:
            description: |-
              OrganizationStatus defines the observed state of Organization, indicating
              whether the organization has been successfully created and is ready for use.
            properties:
              conditions:
                default:
                - lastTransitionTime: "1970-01-01T00:00:00Z"
                  message: Waiting for control plane to reconcile
                  reason: Unknown
                  status: Unknown
                  type: Ready
                description: |-
                  Conditions describe the current state of organization provisioning.
                  Check the "Ready" condition to determine if the organization is
                  available for creating projects and adding members.

                  Common condition types:
                  - Ready: Organization is provisioned and ready for use

                  Example ready condition:
                    - type: Ready
                      status: "True"
                      reason: OrganizationReady
                      message: Organization successfully created
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: |-
                  ObservedGeneration tracks the most recent organization spec that the
                  controller has processed. Use this to determine if status reflects
                  the latest changes.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
