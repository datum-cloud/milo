---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: projects.resourcemanager.miloapis.com
spec:
  group: resourcemanager.miloapis.com
  names:
    kind: Project
    listKind: ProjectList
    plural: projects
    singular: project
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.ownerRef.name
      name: Owner
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: "Project represents a logical container for related resources
          within an\norganization. Projects provide resource organization and access
          control\nboundaries for your applications and workloads.\n\nProjects are
          cluster-scoped resources that must be owned by an organization.\nThey serve
          as the primary unit for organizing and managing resources in Milo.\n\nKey
          characteristics:\n- Cluster-scoped: Projects exist globally across the Milo
          deployment\n- Organization-owned: Each project must reference a valid organization\n-
          Resource container: Groups related resources for management\n- Access control
          boundary: Inherits permissions from the owning organization\n\nCommon workflows:\n1.
          Ensure the owning organization exists and is ready\n2. Create the project
          with a reference to the organization\n3. Wait for the Ready condition to
          become True\n4. Deploy your applications and resources within the project\n\nPrerequisites:\n-
          Organization: The referenced organization must exist and be ready\n\nExample
          - Development project:\n\n\tapiVersion: resourcemanager.miloapis.com/v1alpha1\n\tkind:
          Project\n\tmetadata:\n\t  name: web-app-dev\n\t  annotations:\n\t    kubernetes.io/display-name:
          \"Web App Development\"\n\tspec:\n\t  ownerRef:\n\t    kind: Organization\n\t
          \   name: acme-corp\n\nExample - Production project:\n\n\tapiVersion: resourcemanager.miloapis.com/v1alpha1\n\tkind:
          Project\n\tmetadata:\n\t  name: web-app-prod\n\t  annotations:\n\t    kubernetes.io/display-name:
          \"Web App Production\"\n\tspec:\n\t  ownerRef:\n\t    kind: Organization\n\t
          \   name: acme-corp\n\nRelated resources:\n- Organization: Must exist before
          creating projects\n- IAM resources: Projects inherit permissions from organizations\n\nTroubleshooting:\n-
          Check the Ready condition in status to verify successful provisioning\n-
          Ensure the referenced organization exists and is ready\n- List all projects
          to verify creation and status\n- Display names are set via the kubernetes.io/display-name
          annotation\n\nProject is the Schema for the projects API."
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: |-
              ProjectSpec defines the configuration for a project, specifying which
              organization owns it.
            properties:
              ownerRef:
                description: |-
                  OwnerRef references the organization that owns this project.
                  Projects must be owned by an organization and inherit its permissions.

                  The organization must exist before creating the project.
                  Currently only Organization resources are supported as owners.

                  Example:
                    ownerRef:
                      kind: Organization
                      name: acme-corp
                properties:
                  kind:
                    description: |-
                      Kind specifies the type of resource that owns this project.
                      Currently only "Organization" is supported.

                      Example: "Organization"
                    enum:
                    - Organization
                    type: string
                  name:
                    description: |-
                      Name is the name of the organization that owns this project.
                      The organization must exist before creating the project.

                      Example: "acme-corp"
                    type: string
                required:
                - kind
                - name
                type: object
            required:
            - ownerRef
            type: object
          status:
            description: |-
              ProjectStatus defines the observed state of Project, indicating whether
              the project has been successfully provisioned and is ready for use.
            properties:
              conditions:
                default:
                - lastTransitionTime: "1970-01-01T00:00:00Z"
                  message: Waiting for control plane to reconcile
                  reason: Unknown
                  status: Unknown
                  type: Ready
                description: |-
                  Conditions describe the current state of project provisioning.
                  Check the "Ready" condition to determine if the project is
                  available for deploying resources.

                  Common condition types:
                  - Ready: Project is provisioned and ready for use

                  Example ready condition:
                    - type: Ready
                      status: "True"
                      reason: ProjectReady
                      message: Project successfully provisioned
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
