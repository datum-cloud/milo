---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: resourcegrants.quota.miloapis.com
spec:
  group: quota.miloapis.com
  names:
    kind: ResourceGrant
    listKind: ResourceGrantList
    plural: resourcegrants
    singular: resourcegrant
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Active')].status
      name: Active
      type: string
    - jsonPath: .spec.consumerRef.apiGroup
      name: Consumer Group
      priority: 1
      type: string
    - jsonPath: .spec.consumerRef.kind
      name: Consumer Type
      priority: 1
      type: string
    - jsonPath: .spec.consumerRef.name
      name: Consumer
      priority: 1
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: |-
          ResourceGrant allocates capacity to a consumer for one or more resource types.
          AllowanceBuckets aggregate active grants to calculate available quota.
          You can create grants manually or automate them with GrantCreationPolicy.

          ### How It Works
          - Allocate allowances for one or more `resourceType`s to a `consumerRef`.
          - Only grants with `status.conditions[type=Active]==True` contribute to bucket limits.
          - Grants may be created manually or via [GrantCreationPolicy](#grantcreationpolicy).

          ### Works With
          - Increases [AllowanceBucket](#allowancebucket) `status.limit` for matching (`spec.consumerRef`, `allowances[].resourceType`).
          - Only grants with `status.conditions[type=Active]=="True"` affect bucket limits.
          - Often created by [GrantCreationPolicy](#grantcreationpolicy); manual grants behave the same.
          - Cross-plane allocations are possible when policies target a parent context.

          ### Selectors and Filtering
            - Field selectors (server-side): `spec.consumerRef.kind`, `spec.consumerRef.name`.
            - Label selectors: Add your own labels in metadata to group grants (for example by tier or region).
              Common labels you may add:
            - `quota.miloapis.com/consumer-kind`: `Organization`
            - `quota.miloapis.com/consumer-name`: `<name>`
            - `quota.miloapis.com/resource-kind`: `Project` (repeat per allowance if desired)
            - Common queries:
            - All grants for a consumer: labels `quota.miloapis.com/consumer-kind` + `quota.miloapis.com/consumer-name`.
            - Grants created by a policy: use a policy label your automation adds consistently.

          ### Notes
          - Amounts use the BaseUnit from the corresponding ResourceRegistration.
          - Multiple ResourceGrants can contribute to a single bucket; see bucket grantCount and contributingGrantRefs.

          ### See Also
          - [AllowanceBucket](#allowancebucket): Aggregates active grants into a single limit.
          - [ResourceRegistration](#resourceregistration): Validates resourceType names and claimability.
          - [GrantCreationPolicy](#grantcreationpolicy): Automates grant creation based on observed resources.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ResourceGrantSpec defines the desired state of ResourceGrant.
            properties:
              allowances:
                description: List of allowances this grant contains
                items:
                  description: Allowance defines a single resource allowance within
                    a grant
                  properties:
                    buckets:
                      description: List of buckets this allowance contains
                      items:
                        properties:
                          amount:
                            description: |-
                              Amount of the resource type being granted, measured in the BaseUnit
                              defined by the corresponding ResourceRegistration for this resource type.
                            format: int64
                            minimum: 0
                            type: integer
                        required:
                        - amount
                        type: object
                      minItems: 1
                      type: array
                    resourceType:
                      description: |-
                        Fully qualified name of the resource type being granted.
                        Must match a registered ResourceRegistration.spec.resourceType
                        (for example, "resourcemanager.miloapis.com/projects").
                      type: string
                  required:
                  - buckets
                  - resourceType
                  type: object
                minItems: 1
                type: array
              consumerRef:
                description: |-
                  ConsumerRef identifies the quota consumer (recipient) that receives
                  these allowances (for example, an Organization).
                properties:
                  apiGroup:
                    description: |-
                      APIGroup of the target resource (e.g., "resourcemanager.miloapis.com").
                      Empty string for core API group.
                    type: string
                  kind:
                    description: Kind of the consumer resource (for example, Organization,
                      Project).
                    type: string
                  name:
                    description: Name of the consumer resource object instance.
                    type: string
                required:
                - kind
                - name
                type: object
            required:
            - allowances
            - consumerRef
            type: object
          status:
            description: |-
              ResourceGrantStatus indicates whether a grant is active and the most recent
              spec generation processed by the controller. Only Active grants contribute to
              bucket limits. See the schema for exact fields and condition reasons. For how
              capacity is aggregated, see AllowanceBucket, and for type validity see
              ResourceRegistration.
            properties:
              conditions:
                description: 'Known condition types: "Active"'
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-validations:
                - message: Active condition reason must be valid
                  rule: 'self.all(c, c.type == ''Active'' ? c.reason in [''GrantActive'',
                    ''ValidationFailed'', ''GrantPending''] : true)'
              observedGeneration:
                description: Most recent generation observed.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    selectableFields:
    - jsonPath: .spec.consumerRef.kind
    - jsonPath: .spec.consumerRef.name
    served: true
    storage: true
    subresources:
      status: {}
