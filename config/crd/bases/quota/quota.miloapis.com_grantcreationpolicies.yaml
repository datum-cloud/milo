---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: grantcreationpolicies.quota.miloapis.com
spec:
  group: quota.miloapis.com
  names:
    kind: GrantCreationPolicy
    listKind: GrantCreationPolicyList
    plural: grantcreationpolicies
    singular: grantcreationpolicy
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.trigger.resource.kind
      name: Trigger
      type: string
    - jsonPath: .spec.enabled
      name: Enabled
      type: boolean
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: |-
          GrantCreationPolicy automates ResourceGrant creation when observed resources meet conditions.
          Use it to provision quota based on resource lifecycle events and attributes.

          ### How It Works
          - Watch the kind in `spec.trigger.resource` and evaluate all `spec.trigger.constraints[]`.
          - When all constraints are true, render `spec.target.resourceGrantTemplate` and create a `ResourceGrant`.
          - Optionally target a parent control plane via `spec.target.parentContext` (CEL-resolved name) for cross-cluster allocation.
          - Templating supports variables `.trigger`, `.requestInfo`, `.user` and functions `lower`, `upper`, `title`, `default`, `contains`, `join`, `split`, `replace`, `trim`, `toInt`, `toString`.
          - Allowances (resource types and amounts) are static in `v1alpha1`.

          ### Works With
          - Creates [ResourceGrant](#resourcegrant) objects whose `allowances[].resourceType` must exist in a [ResourceRegistration](#resourceregistration).
          - May target a parent control plane via `spec.target.parentContext` for cross-plane quota allocation.
          - Policy readiness (`status.conditions[type=Ready]`) signals template/constraint validity.

          ### Status
          - `status.conditions[type=Ready]`: Policy validated and active.
          - `status.conditions[type=ParentContextReady]`: Crossâ€‘cluster targeting is resolvable.
          - `status.observedGeneration`: Latest spec generation processed.

          ### Selectors and Filtering
            - Field selectors (server-side):
              `spec.trigger.resource.kind`, `spec.trigger.resource.apiVersion`,
              `spec.target.parentContext.kind`, `spec.target.parentContext.apiGroup`.
            - Label selectors (add your own):
            - `quota.miloapis.com/trigger-kind`: `Organization`
            - `quota.miloapis.com/environment`: `prod`
            - Common queries:
            - All policies for a trigger kind: label selector `quota.miloapis.com/trigger-kind`.
            - All enabled policies: field selector `spec.enabled=true`.

          ### Defaults and Limits
          - Resource grant allowances are static (no expression-based amounts) in `v1alpha1`.

          ### Notes
          - If `ParentContextReady=False`, verify `nameExpression` and referenced attributes.
          - Disabled policies (`spec.enabled=false`) do not create grants.

          ### See Also
          - [ResourceGrant](#resourcegrant): The object created by this policy.
          - [ResourceRegistration](#resourceregistration): Resource types that grants must reference.
          - [ClaimCreationPolicy](#claimcreationpolicy): Creates claims at admission for enforcement.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: GrantCreationPolicySpec defines the desired state of GrantCreationPolicy.
            properties:
              enabled:
                default: true
                description: |-
                  Enabled determines if this policy is active.
                  If false, no **ResourceGrants** will be created for matching resources.
                type: boolean
              target:
                description: Target defines where and how grants should be created.
                properties:
                  parentContext:
                    description: |-
                      ParentContext defines cross-control-plane targeting.
                      If specified, grants will be created in the target parent context
                      instead of the current control plane.
                    properties:
                      apiGroup:
                        description: |-
                          APIGroup specifies the API group of the parent context resource.
                          Must follow DNS subdomain format. Maximum 253 characters.

                          Examples:
                          - "resourcemanager.miloapis.com" (for Organization parent context)
                          - "infrastructure.miloapis.com" (for Cluster parent context)
                        maxLength: 253
                        pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                        type: string
                      kind:
                        description: |-
                          Kind specifies the resource type that represents the parent context.
                          Must be a valid Kubernetes resource Kind. Maximum 63 characters.

                          Examples:
                          - "Organization" (create grants in organization's parent control plane)
                          - "Cluster" (create grants in cluster's parent infrastructure)
                        maxLength: 63
                        minLength: 1
                        pattern: ^[A-Z][a-zA-Z0-9]*$
                        type: string
                      nameExpression:
                        description: |-
                          NameExpression is a CEL expression that resolves the name of the parent context resource.
                          Must return a string value that identifies the specific parent context instance.
                          Maximum 512 characters.

                          Available variables:
                          - object: The trigger resource being evaluated (complete object)

                          Common expression patterns:
                          - object.spec.organization (direct field reference)
                          - object.metadata.labels["parent-org"] (label-based resolution)
                          - object.metadata.namespace.split("-")[0] (derived from namespace naming)

                          Examples:
                          - "acme-corp" (literal parent name)
                          - object.spec.parentOrganization (field from trigger resource)
                          - object.metadata.labels["quota.miloapis.com/organization"] (label value)
                        maxLength: 512
                        minLength: 1
                        type: string
                    required:
                    - apiGroup
                    - kind
                    - nameExpression
                    type: object
                  resourceGrantTemplate:
                    description: |-
                      ResourceGrantTemplate defines how to create **ResourceGrants**.
                      String fields support Go template syntax for dynamic content.
                    properties:
                      metadata:
                        description: |-
                          Metadata for the created ResourceGrant.
                          String fields support Go template syntax.
                        properties:
                          annotations:
                            additionalProperties:
                              type: string
                            description: |-
                              Annotations specifies annotations to apply to the created ResourceClaim.
                              Values support Go template syntax for dynamic content.
                              The system automatically adds standard annotations for tracking.

                              Template variables available:
                              - .trigger: The resource triggering claim creation
                              - .requestInfo: Request details
                              - .user: User information

                              Examples:
                              - created-for: "{{.trigger.metadata.name}}"
                              - requested-by: "{{.user.name}}"
                              - trigger-kind: "{{.trigger.kind}}"
                            type: object
                          generateName:
                            description: |-
                              GenerateName specifies a prefix for auto-generated names when Name is empty.
                              Kubernetes appends random characters to create unique names.
                              Supports Go template syntax.

                              Example: "{{.trigger.spec.type}}-claim-"
                            type: string
                          labels:
                            additionalProperties:
                              type: string
                            description: |-
                              Labels specifies static labels to apply to the created ResourceClaim.
                              Values are literal strings (no template processing).
                              The system automatically adds standard labels for policy tracking.

                              Useful for:
                              - Organizing claims by policy or resource type
                              - Adding environment or tier indicators
                              - Enabling label-based queries and monitoring
                            type: object
                          name:
                            description: |-
                              Name specifies the exact name for the created ResourceClaim.
                              Supports Go template syntax with access to template variables.
                              Leave empty to use GenerateName for auto-generated names.

                              Template variables available:
                              - .trigger: The resource triggering claim creation
                              - .requestInfo: Request details (verb, resource, name, etc.)
                              - .user: User information (name, uid, groups, extra)

                              Example: "{{.trigger.metadata.name}}-quota-claim"
                            type: string
                          namespace:
                            description: |-
                              Namespace specifies where the ResourceClaim will be created.
                              Supports Go template syntax to derive namespace from trigger resource.
                              Leave empty to create in the same namespace as the trigger resource.

                              Examples:
                              - "{{.trigger.metadata.namespace}}" (same namespace as trigger)
                              - "milo-system" (fixed system namespace)
                              - "{{.trigger.spec.organization}}-claims" (derived namespace)
                            type: string
                        type: object
                      spec:
                        description: |-
                          Spec for the created ResourceGrant.
                          String fields support Go template syntax.
                        properties:
                          allowances:
                            description: |-
                              Allowances specifies the quota allocations provided by this grant.
                              Each allowance grants capacity for a specific resource type.
                              Minimum 1 allowance required, maximum 20 allowances per grant.

                              All allowances in a single grant:
                              - Apply to the same consumer (spec.consumerRef)
                              - Contribute to the same AllowanceBucket for each resource type
                              - Activate and deactivate together based on the grant's status
                            items:
                              description: |-
                                Allowance defines quota allocation for a specific resource type within a ResourceGrant.
                                Each allowance can contain multiple buckets that sum to provide total capacity.
                              properties:
                                buckets:
                                  description: |-
                                    Buckets contains the quota allocations for this resource type.
                                    All bucket amounts are summed to determine the total allowance.
                                    Minimum 1 bucket required per allowance.

                                    Multiple buckets can be used for:
                                    - Separating quota from different sources or tiers
                                    - Managing incremental quota increases over time
                                    - Tracking quota attribution for billing or reporting
                                  items:
                                    description: |-
                                      Bucket represents a single allocation of quota capacity within an allowance.
                                      Each bucket contributes its amount to the total allowance for a resource type.
                                    properties:
                                      amount:
                                        description: |-
                                          Amount specifies the quota capacity provided by this bucket.
                                          Must be measured in the BaseUnit defined by the corresponding ResourceRegistration.
                                          Must be a non-negative integer (0 is valid but provides no quota).

                                          Examples:
                                          - 100 (providing 100 projects)
                                          - 2048000 (providing 2048000 bytes = 2GB)
                                          - 5000 (providing 5000 CPU millicores = 5 cores)
                                        format: int64
                                        minimum: 0
                                        type: integer
                                    required:
                                    - amount
                                    type: object
                                  minItems: 1
                                  type: array
                                resourceType:
                                  description: |-
                                    ResourceType identifies the specific resource type receiving quota allocation.
                                    Must exactly match a ResourceRegistration.spec.resourceType that is currently active.
                                    The quota system validates this reference when processing the grant.

                                    The identifier format is flexible, as defined by platform administrators
                                    in their ResourceRegistrations.

                                    Examples:
                                    - "resourcemanager.miloapis.com/projects"
                                    - "compute_cpu"
                                    - "storage.volumes"
                                    - "custom-service-quota"
                                  type: string
                              required:
                              - buckets
                              - resourceType
                              type: object
                            minItems: 1
                            type: array
                          consumerRef:
                            description: |-
                              ConsumerRef identifies the quota consumer that receives these allowances.
                              The consumer type must match the ConsumerTypeRef defined in the ResourceRegistration
                              for each allowance resource type. The system validates this relationship.

                              Examples:
                              - Organization receiving Project quota allowances
                              - Project receiving User quota allowances
                              - Organization receiving storage quota allowances
                            properties:
                              apiGroup:
                                description: |-
                                  APIGroup specifies the API group of the consumer resource.
                                  Use full group name for Milo resources.

                                  Examples:
                                  - "resourcemanager.miloapis.com" (Organization/Project resources)
                                  - "iam.miloapis.com" (User/Group resources)
                                  - "infrastructure.miloapis.com" (infrastructure resources)
                                type: string
                              kind:
                                description: |-
                                  Kind specifies the type of consumer resource.
                                  Must match an existing Kubernetes resource type that can receive quota grants.

                                  Common consumer types:
                                  - "Organization" (top-level quota consumer)
                                  - "Project" (project-level quota consumer)
                                  - "User" (user-level quota consumer)
                                type: string
                              name:
                                description: |-
                                  Name identifies the specific consumer resource instance.
                                  Must match the name of an existing consumer resource in the cluster.

                                  Examples:
                                  - "acme-corp" (Organization name)
                                  - "web-application" (Project name)
                                  - "john.doe" (User name)
                                type: string
                              namespace:
                                description: |-
                                  Namespace identifies the namespace of the consumer resource.
                                  Required for namespaced consumer resources (e.g., Projects).
                                  Leave empty for cluster-scoped consumer resources (e.g., Organizations).

                                  Examples:
                                  - "" (empty for cluster-scoped Organizations)
                                  - "organization-acme-corp" (namespace for Projects within an organization)
                                  - "project-web-app" (namespace for resources within a project)
                                type: string
                            required:
                            - kind
                            - name
                            type: object
                        required:
                        - allowances
                        - consumerRef
                        type: object
                    required:
                    - metadata
                    - spec
                    type: object
                required:
                - resourceGrantTemplate
                type: object
              trigger:
                description: Trigger defines what resource changes should trigger
                  grant creation.
                properties:
                  constraints:
                    description: |-
                      Constraints are CEL expressions that must evaluate to true for grant creation.
                      All constraints must pass for the policy to trigger.
                      The 'object' variable contains the trigger resource being evaluated.
                    items:
                      description: |-
                        ConditionExpression defines a CEL expression that determines when the policy should trigger.
                        All expressions in a policy's trigger conditions must evaluate to true for the policy to activate.
                      properties:
                        expression:
                          description: |-
                            Expression specifies the CEL expression to evaluate against the trigger resource.
                            Must return a boolean value (true to match, false to skip).
                            Maximum 1024 characters.

                            Available variables in GrantCreationPolicy context:
                            - object: The complete resource being watched (map[string]any)
                              - object.metadata.name, object.spec.*, object.status.*, etc.

                            Common expression patterns:
                            - object.spec.tier == "premium" (check resource field)
                            - object.metadata.labels["environment"] == "prod" (check labels)
                            - object.status.phase == "Active" (check status)
                            - object.metadata.namespace == "production" (check namespace)
                            - has(object.spec.quotaProfile) (check field existence)
                          maxLength: 1024
                          minLength: 1
                          type: string
                        message:
                          description: |-
                            Message provides a human-readable description explaining when this condition applies.
                            Used for documentation and debugging. Maximum 256 characters.

                            Examples:
                            - "Applies only to premium tier organizations"
                            - "Matches organizations in production environment"
                            - "Triggers when quota profile is specified"
                          maxLength: 256
                          type: string
                      required:
                      - expression
                      type: object
                    maxItems: 10
                    type: array
                  resource:
                    description: Resource specifies which resource type triggers this
                      policy.
                    properties:
                      apiVersion:
                        description: |-
                          APIVersion of the trigger resource in the format "group/version".
                          For core resources, use "v1".
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\/)?v[0-9]+((alpha|beta)[0-9]*)?$
                        type: string
                      kind:
                        description: Kind is the kind of the trigger resource.
                        maxLength: 63
                        minLength: 1
                        pattern: ^[A-Z][a-zA-Z0-9]*$
                        type: string
                    required:
                    - apiVersion
                    - kind
                    type: object
                required:
                - resource
                type: object
            required:
            - target
            - trigger
            type: object
          status:
            description: |-
              GrantCreationPolicyStatus defines the observed state of GrantCreationPolicy.

              Status fields
              - conditions[type=Ready]: True when the policy is validated and active.
              - conditions[type=ParentContextReady]: True when crossâ€‘cluster targeting is resolvable.
              - observedGeneration: Latest spec generation processed by the quota system.

              See also
              - [ResourceGrant](#resourcegrant): The object created by this policy.
              - [ResourceRegistration](#resourceregistration): Resource types for which grants are issued.
            properties:
              conditions:
                description: Conditions represent the latest available observations
                  of the policy's current state.
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: ObservedGeneration is the most recent generation observed.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    selectableFields:
    - jsonPath: .spec.trigger.resource.kind
    - jsonPath: .spec.trigger.resource.apiVersion
    - jsonPath: .spec.target.parentContext.kind
    - jsonPath: .spec.target.parentContext.apiGroup
    served: true
    storage: true
    subresources:
      status: {}
