---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: resourceclaims.quota.miloapis.com
spec:
  group: quota.miloapis.com
  names:
    kind: ResourceClaim
    listKind: ResourceClaimList
    plural: resourceclaims
    singular: resourceclaim
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Granted')].status
      name: Granted
      type: string
    - jsonPath: .spec.requests[0].resourceType
      name: Resource
      priority: 1
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: |-
          ResourceClaim represents a quota consumption request tied to the creation of a resource.
          ClaimCreationPolicy typically creates these claims during admission to enforce quota in real time.
          The system evaluates each claim against [AllowanceBucket](#allowancebucket)s that aggregate available capacity.

          ### How It Works
          - Admission evaluates policies that match the incoming resource and creates a `ResourceClaim`.
          - The claim requests one or more resource types and amounts for a specific `consumerRef`.
          - The system grants the claim when sufficient capacity is available; otherwise it denies it.
          - `resourceRef` links back to the triggering resource to enable cleanup and auditing.

          ### Works With
          - Created by [ClaimCreationPolicy](#claimcreationpolicy) at admission when trigger conditions match.
          - Evaluated against [AllowanceBucket](#allowancebucket) capacity for the matching `spec.consumerRef` + `spec.requests[].resourceType`.
          - Must target a registered `resourceType`; the triggering kind must be allowed by the target [ResourceRegistration](#resourceregistration) `spec.claimingResources`.
          - Controllers set owner references where possible and clean up denied auto‑created claims.

          ### Notes
          - Auto-created claims set owner references when possible; a fallback path updates ownership asynchronously.
          - Auto-created claims denied by policy are cleaned up automatically; manual claims are not.

          ### Selectors and Filtering
            - Field selectors (server-side):
              `spec.consumerRef.kind`, `spec.consumerRef.name`,
              `spec.resourceRef.apiGroup`, `spec.resourceRef.kind`, `spec.resourceRef.name`, `spec.resourceRef.namespace`.
            - Built-in labels (on auto-created claims):
            - `quota.miloapis.com/auto-created`: `"true"`
            - `quota.miloapis.com/policy`: `<ClaimCreationPolicy name>`
            - `quota.miloapis.com/gvk`: `<group.version.kind of the triggering resource>`
            - Built-in annotations (on auto-created claims):
            - `quota.miloapis.com/created-by`: `claim-creation-plugin`
            - `quota.miloapis.com/created-at`: `RFC3339` timestamp
            - `quota.miloapis.com/resource-name`: name of the triggering resource
            - `quota.miloapis.com/policy`: `<ClaimCreationPolicy name>`
            - Common queries:
            - All auto-created claims for a policy: label selector `quota.miloapis.com/policy`.
            - All claims for a consumer: add labels for `consumer-kind` and `consumer-name` via policy templates and filter by label.
            - All claims for a specific triggering kind: label selector `quota.miloapis.com/gvk`.

          ### See Also
          - [AllowanceBucket](#allowancebucket): Aggregates limits and usage that drive claim evaluation.
          - [ResourceGrant](#resourcegrant): Supplies capacity aggregated by buckets.
          - [ClaimCreationPolicy](#claimcreationpolicy): Automates creation of ResourceClaims at admission.
          - [ResourceRegistration](#resourceregistration): Defines claimable resource types.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ResourceClaimSpec defines the desired state of ResourceClaim.
            properties:
              consumerRef:
                description: |-
                  ConsumerRef identifies the quota consumer (the subject that receives
                  limits and consumes capacity) making this claim. Examples include an
                  Organization or a Project, depending on how the registration is defined.
                properties:
                  apiGroup:
                    description: |-
                      APIGroup of the target resource (e.g., "resourcemanager.miloapis.com").
                      Empty string for core API group.
                    type: string
                  kind:
                    description: Kind of the consumer resource (for example, Organization,
                      Project).
                    type: string
                  name:
                    description: Name of the consumer resource object instance.
                    type: string
                required:
                - kind
                - name
                type: object
              requests:
                description: |-
                  Requests specifies the resource types and amounts being claimed.
                  Each resource type must be unique within the requests array.
                items:
                  description: ResourceRequest defines a single resource request within
                    a claim
                  properties:
                    amount:
                      description: |-
                        Amount of the resource being claimed, measured in the BaseUnit
                        defined by the corresponding ResourceRegistration.
                      format: int64
                      minimum: 0
                      type: integer
                    resourceType:
                      description: |-
                        Fully qualified name of the resource type being claimed.
                        Must match a registered ResourceRegistration.spec.resourceType
                        (for example, "resourcemanager.miloapis.com/projects" or
                        "core/persistentvolumeclaims").
                      type: string
                  required:
                  - amount
                  - resourceType
                  type: object
                maxItems: 20
                minItems: 1
                type: array
              resourceRef:
                description: |-
                  ResourceRef links to the actual resource that triggered this quota claim.
                  Automatically populated by the admission plugin.
                  Uses an unversioned reference to persist across API version upgrades.
                properties:
                  apiGroup:
                    description: |-
                      APIGroup is the group for the resource being referenced.
                      If APIGroup is not specified, the specified Kind must be in the core API group.
                      For any other third-party types, APIGroup is required.
                    type: string
                  kind:
                    description: Kind of the referent.
                    type: string
                  name:
                    description: Name of the referent.
                    type: string
                  namespace:
                    description: |-
                      Namespace of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                    type: string
                required:
                - kind
                - name
                type: object
            required:
            - consumerRef
            - requests
            - resourceRef
            type: object
          status:
            default:
              conditions:
              - lastTransitionTime: "1970-01-01T00:00:00Z"
                message: Awaiting capacity evaluation
                reason: PendingEvaluation
                status: "False"
                type: Granted
            description: |-
              ResourceClaimStatus captures the controller's evaluation of a claim: an overall
              grant decision reported via conditions and per‑resource allocation results. It
              also records the most recent observed spec generation. See the schema for exact
              fields, condition reasons, and constraints. For capacity context, consult
              [AllowanceBucket](#allowancebucket) and for capacity sources see
              [ResourceGrant](#resourcegrant).
            properties:
              allocations:
                description: |-
                  removed: aggregate allocated total is not tracked; use per-request allocations instead
                  Per-request allocation status tracking. Each entry corresponds to a resource type in spec.requests[]
                items:
                  description: RequestAllocation tracks the allocation status of a
                    specific resource request within a claim.
                  properties:
                    allocatedAmount:
                      description: |-
                        Amount actually allocated for this request (may be less than requested in some scenarios),
                        measured in the BaseUnit defined by the ResourceRegistration.
                      format: int64
                      minimum: 0
                      type: integer
                    allocatingBucket:
                      description: Name of the AllowanceBucket that provided this
                        allocation (set when status is Granted)
                      type: string
                    lastTransitionTime:
                      description: Timestamp of the last status transition for this
                        allocation
                      format: date-time
                      type: string
                    message:
                      description: Human-readable message describing the allocation
                        result
                      type: string
                    reason:
                      description: Reason for the current allocation status
                      type: string
                    resourceType:
                      description: |-
                        Resource type that this allocation status refers to.
                        Must correspond to a resourceType listed in spec.requests.
                      minLength: 1
                      type: string
                    status:
                      description: Status of this specific request allocation
                      enum:
                      - Granted
                      - Denied
                      - Pending
                      type: string
                  required:
                  - lastTransitionTime
                  - resourceType
                  - status
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - resourceType
                x-kubernetes-list-type: map
              conditions:
                description: 'Known condition types: "Granted"'
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-validations:
                - message: Granted condition reason must be valid
                  rule: 'self.all(c, c.type == ''Granted'' ? c.reason in [''QuotaAvailable'',
                    ''QuotaExceeded'', ''ValidationFailed'', ''PendingEvaluation'']
                    : true)'
              observedGeneration:
                description: Most recent generation observed.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    selectableFields:
    - jsonPath: .spec.consumerRef.kind
    - jsonPath: .spec.consumerRef.name
    - jsonPath: .spec.resourceRef.apiGroup
    - jsonPath: .spec.resourceRef.kind
    - jsonPath: .spec.resourceRef.name
    - jsonPath: .spec.resourceRef.namespace
    served: true
    storage: true
    subresources:
      status: {}
