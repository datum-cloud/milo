version: 3

includes:
  api:
    taskfile: ./api/Taskfile.yaml
    dir: ./api
    
tasks:
  env:start:
    run: once
    desc: Start the development environment
    cmds:
      - docker compose -f docker-compose.yaml up -d
  env:stop:
    desc: Stops the development environment
    cmds:
      - docker compose -f docker-compose.yaml stop
  env:reset:
    desc: Resets the development environment. Warning this will remove all data!
    cmds:
      - docker compose -f docker-compose.yaml down

  openfga:store-id:
    silent: true
    desc: Retrieves the store ID from the openfga server
    cmd: fga store list | jq -r '.stores[] | select(.name=="datum") | .id'

  openfga:create-store:
    silent: true
    run: once
    deps:
      - env:start
    desc: Creates a store in OpenFGA that should be used for the environment.
    cmd: |
      STORE_ID=$(task openfga:store-id)
      if [ -z "$STORE_ID" ]; then
        fga store create --name "datum"
        echo "Store 'datum' created."
      else
        echo "Store 'datum' already exists (ID: $STORE_ID)."
      fi

  apiserver:serve:
    desc: Starts the IAM APIServer with authentication disabled.
    deps:
      - openfga:create-store
    cmd: |
      go run ./cmd/apiserver serve \
        --openfga-endpoint=dns:///localhost:8081 \
        --openfga-store-id=$(task openfga:store-id) \
        --database=postgres://root@localhost:26257/iam?sslmode=disable \
        --rest-addr=:8000 \
        --grpc-addr=:8001 \
        --disable-auth=false \
        --authentication-config=$(cat ./test/config/authentication/authentication-config.json | jq -c .) \
        --zitadel-key-path="test/config/zitadel/secrets/machine-key.json" \
        {{ .CLI_ARGS }}

  iamservice:loadservices:
    cmd: |
      go run ./cmd/apiserver add-resources \
        --openfga-endpoint=dns:///localhost:8081 \
        --openfga-store-id=$(task openfga:store-id) \
        --database-connection-string=postgres://root@localhost:26257/iam?sslmode=disable \
        --services config/services \
        --overwrite true

  iamservice:loadroles:
    cmd: |
      go run ./cmd/apiserver add-resources \
        --openfga-endpoint=dns:///localhost:8081 \
        --openfga-store-id=$(task openfga:store-id) \
        --database-connection-string=postgres://root@localhost:26257/iam?sslmode=disable \
        --roles config/roles \
        --overwrite true
    
  iamservice:loadpolicies:
    cmd: |
      go run ./cmd/apiserver add-resources \
        --openfga-endpoint=dns:///localhost:8081 \
        --openfga-store-id=$(task openfga:store-id) \
        --database-connection-string=postgres://root@localhost:26257/iam?sslmode=disable \
        --policies config/policies \
        --overwrite true

  openfga:getuserorganizations:
    desc: Retrieves the OpenFGA model from the server
    cmd: |                                                       #resource identifier, hashed permission, resource type
      fga query list-objects --store-id $(task openfga:store-id) iam.datumapis.com/InternalUser:users/db2fcc5a-b98a-48e5-b5df-b282d910273b 7983b8fa resourcemanager.datumapis.com/Organization


        