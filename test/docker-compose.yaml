# This docker compose file contains all of the necessary services needed to do
# end-to-end testing with the IAM system.
#
# Services deployed:
# - CockroachDB
# - OpenFGA
# - Zitadel
# - Mailhog
services:
  # Create a new cockroach database
  database:
    image: cockroachdb/cockroach:v25.2.0
    ports:
      - "26257:26257"
      # Expose the CRDB admin UI on 9090
      - "9090:8080"
    command: start-single-node --insecure
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health?ready=1"]
      interval: 3s
      timeout: 3s
      retries: 5

  create-databases:
    image: cockroachdb/cockroach:v25.2.0
    command:
      - sql
      - --insecure
      - --host=database
      - --execute=CREATE DATABASE IF NOT EXISTS openfga; CREATE DATABASE IF NOT EXISTS iam;
    depends_on:
      database:
        condition: service_healthy

  migrate-openfga:
    image: openfga/openfga:v1.8.13
    command: migrate
    depends_on:
      database:
        condition: service_healthy
      create-databases:
        condition: service_completed_successfully
    environment:
      - OPENFGA_DATASTORE_ENGINE=postgres
      - OPENFGA_DATASTORE_URI=postgres://root@database:26257/openfga?sslmode=disable
      - OPENFGA_LOG_FORMAT=json

  openfga-apiserver:
    user: "1001:1001"
    depends_on:
      migrate-openfga:
        condition: service_completed_successfully
    image: openfga/openfga:v1.8.13
    environment:
      - OPENFGA_DATASTORE_ENGINE=postgres
      - OPENFGA_DATASTORE_URI=postgres://root@database:26257/openfga?sslmode=disable
      - OPENFGA_LOG_FORMAT=json
      - OPENFGA_DATASTORE_MAX_OPEN_CONNS=100
      - OPENFGA_PLAYGROUND_ENABLED=true
      - OPENFGA_LIST_USERS_MAX_RESULTS=10000
      - OPENFGA_GRPC_TLS_ENABLED=false
    command:
      - run
      - --check-query-cache-enabled
      - --metrics-enabled
      - --datastore-metrics-enabled
      - --authn-method=none
    healthcheck:
      test: ["CMD", "/usr/local/bin/grpc_health_probe", "-addr=openfga-apiserver:8081"]
      interval: 5s
      timeout: 30s
      retries: 3
    ports:
      # Needed for the http server
      - "8080:8080"
      # Needed for the grpc server (if used)
      - "8081:8081"
      # Needed for the playground (Do not enable in prod!)
      - "3000:3000"
      # Needed for the prometheus metrics
      - "2112:2112" #prometheus metrics
